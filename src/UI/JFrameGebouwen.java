package UI;

import Helpers.Canvas;
import Model.Building;
import Model.Department;
import Model.Floor;
import Service.JsonService;
import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sa59053
 */
public class JFrameGebouwen extends javax.swing.JFrame {

    DefaultListModel listModel = new DefaultListModel<String>();
    DefaultListModel listModel2 = new DefaultListModel<String>();
    DefaultListModel listModelVerdiep = new DefaultListModel<String>();
    Building gebouw;
    Floor verdieping;
    Floor ver;
    List<Building> gebouwen;
    List<Floor> verdiepingen;
    List<Floor> verdiepingen2;
    JsonService json;
    Canvas canvas;
    private DefaultTableModel model;
    private int row = 0;
    int getConvGebouwRow;
    private Object[] rowData;
    List<Floor> vloeren;
    long gebouwId = 0;
    private String[] listboxArray;
    Long selectedFloorId;
    String svg;
    
    public JFrameGebouwen() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null); 
        this.getContentPane().setBackground(Color.DARK_GRAY);
        gebouwen = new ArrayList();
        json = new JsonService();
        fillJlist();
        gebouwen = json.getAllBuildings();
        canvas = new Canvas();
        gebouw = new Building();
        //verdieping = new Floor();
        model = new DefaultTableModel();
        verdieping = new Floor();
        JTableHeader header = tblGebouw.getTableHeader();
        header.setFont(new Font("Dialog", Font.BOLD, 18));
        //header.setBackground(Color.WHITE);        
        verdiepingen = new ArrayList();
        verdiepingen2 = new ArrayList();
            
        vloeren = new ArrayList();
        
        populateGebouwTabel();
        populateLSTSVG();

    }

    public int getRow() {
        return row;
    }

    public void setRow(int row) {
        this.row = row;
    }
    
    public void populateLSTSVG(){
        List<String> lst = canvas.getLst();
        listModel2.addElement(lst);
        lstSVG.setModel(listModel2);
        lstSVG.setLayoutOrientation(JList.VERTICAL_WRAP);    
    }

    public void populateGebouwTabel() throws IOException {
        gebouwen = json.getAllBuildings();
        model = (DefaultTableModel) tblGebouw.getModel();
        model.setRowCount(0);
        rowData = new Object[6];
        for (int i = 0; i < gebouwen.size(); i++) {
            rowData[0] = gebouwen.get(i).getBuildingId();
            rowData[1] = gebouwen.get(i).getName();
            rowData[2] = gebouwen.get(i).getStreet();
            rowData[3] = gebouwen.get(i).getNumber();
            rowData[4] = gebouwen.get(i).getCity();
            rowData[5] = gebouwen.get(i).getZipCode();
            model.addRow(rowData);
        }

        model.fireTableDataChanged();

    }    

    public void fillJlist() throws IOException {
        List<Department> departments = new ArrayList();
        departments = json.getAllDepartments();
        for (int i = 0; i < departments.size(); i++) {
            if(departments.get(i).getFloorId().equals(selectedFloorId)){
                
                listModel.addElement(departments.get(i).getDepartmentId());
                listModel.addElement(departments.get(i).getName());
            }
        }

            //list1 = new JList(listModel);
            jlistVerdiepingen.setModel(listModel);
            jlistVerdiepingen.setSelectedIndex(0);
            jlistVerdiepingen.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
            jlistVerdiepingen.setLayoutOrientation(JList.VERTICAL_WRAP);
            //jlistVerdiepingen.setVisibleRowCount(-1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlistVerdiepingen = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstSVG = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstVerdiepingen = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblGebouw = new javax.swing.JTable();
        btnDesigner = new javax.swing.JButton();
        btnJson = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));

        jlistVerdiepingen.setBackground(new java.awt.Color(133, 181, 205));
        jlistVerdiepingen.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jlistVerdiepingen.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jlistVerdiepingen.setSelectionBackground(new java.awt.Color(232, 255, 255));
        jScrollPane1.setViewportView(jlistVerdiepingen);

        lstSVG.setBackground(new java.awt.Color(133, 181, 205));
        lstSVG.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        lstSVG.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jScrollPane2.setViewportView(lstSVG);

        lstVerdiepingen.setBackground(new java.awt.Color(133, 181, 205));
        lstVerdiepingen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 18))); // NOI18N
        lstVerdiepingen.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        lstVerdiepingen.setSelectionBackground(new java.awt.Color(232, 255, 255));
        lstVerdiepingen.setSelectionForeground(new java.awt.Color(102, 102, 102));
        jScrollPane3.setViewportView(lstVerdiepingen);

        tblGebouw.setBackground(new java.awt.Color(133, 181, 205));
        tblGebouw.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblGebouw.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        tblGebouw.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "BuildingId", "Gebouwnaam", "Straat", "Huisnr", "Stad", "Postcode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblGebouw.setSelectionBackground(new java.awt.Color(232, 255, 255));
        tblGebouw.setSelectionForeground(new java.awt.Color(102, 102, 102));
        tblGebouw.setShowVerticalLines(true);
        tblGebouw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGebouwMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblGebouw);

        btnDesigner.setBackground(new java.awt.Color(114, 158, 180));
        btnDesigner.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        btnDesigner.setText("Designer");
        btnDesigner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesignerActionPerformed(evt);
            }
        });

        btnJson.setBackground(new java.awt.Color(108, 149, 169));
        btnJson.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        btnJson.setText("Verzenden");
        btnJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJsonActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(133, 181, 205));
        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(133, 181, 205));
        jLabel1.setText("Gebouwen");

        jLabel2.setBackground(new java.awt.Color(133, 181, 205));
        jLabel2.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(133, 181, 205));
        jLabel2.setText("Verdiepingen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(558, 558, 558)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(19, 19, 19)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnJson, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1044, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1036, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDesigner, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnJson, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void tblGebouwMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGebouwMouseClicked
        row = tblGebouw.getSelectedRow();
        getConvGebouwRow = tblGebouw.convertRowIndexToModel(row);

        gebouw.setBuildingId((long) model.getValueAt(row, 0));
        gebouw.setName(model.getValueAt(row, 1).toString());
        gebouw.setStreet(model.getValueAt(row, 2).toString());
        gebouw.setNumber((int) model.getValueAt(row, 3));
        gebouw.setCity(model.getValueAt(row, 4).toString());
        gebouw.setZipCode((int) model.getValueAt(row, 5));
        try {
            getFloor();

        } catch (IOException ex) {
            Logger.getLogger(JFrameGebouwen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tblGebouwMouseClicked

    private void btnDesignerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesignerActionPerformed
            this.dispose();
            InputWH ip = new InputWH();
            ip.enable();
    }//GEN-LAST:event_btnDesignerActionPerformed
    
    private void btnJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJsonActionPerformed
    
        selectedFloorId = Long.parseLong(lstVerdiepingen.getSelectedValue());
        svg = canvas.getLst().toString();
        Floor verdiep = new Floor();        
        Floor verdieping1 = new Floor();

        try {
            
            verdieping1 = json.getFloorById(selectedFloorId);
            
            verdiep.setName(verdieping1.getName());
            verdiep.setNumber(verdieping1.getNumber());
            verdiep.setFloorCode(verdieping1.getFloorCode());
            verdiep.setSVG(svg);
            verdiep.setFloorId(selectedFloorId);
            verdiep.setBuildingId(verdieping1.getBuildingId());

            json.addFloorSVG(verdiep);
            
            
        } catch (IOException ex) {
            ex.getStackTrace();
        }

        
    }//GEN-LAST:event_btnJsonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameGebouwen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameGebouwen().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(JFrameGebouwen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    //Filtert de verdiepingen uit die overeenkomen met een gebouw
    public void getFloor() throws IOException {
        
        List<Floor> floors = new ArrayList();
        List<Building> buildings = new ArrayList();
        List<String> vloeren = new ArrayList();
        
        
        buildings = json.getAllBuildings();
        vloeren.clear();        
        listModelVerdiep.removeAllElements();        
       
        if (gebouw.getBuildingId() != null) {
            gebouwId = gebouw.getBuildingId();
        }


        for (int i = 0; i < buildings.size(); i++) {
            if (gebouw.getName().equals(buildings.get(i).getName())) {
                gebouwId = buildings.get(i).getBuildingId();
            }
        }
        
        
        floors = json.getAllFloors();

        for (int i = 0; i < floors.size(); i++) {

            if (gebouwId == floors.get(i).getBuildings().getBuildingId()) {

                vloeren.add(floors.get(i).getFloorId().toString());
                vloeren.add(floors.get(i).getName());
                 listboxArray= new String[1];
                
                
            }
        }
        for (int t = 0; t < vloeren.size(); t++) {
                listModelVerdiep.addElement(vloeren.get(t));
                
                }
             lstVerdiepingen.setModel(listModelVerdiep);
//        for (int i = 0; i < vloeren.size(); i++) {
//            System.out.println(vloeren.get(i));
//        }

    }

    public List<Floor> getVloeren() {
        return vloeren;
    }

    public void setVloeren(List<Floor> vloeren) {
        this.vloeren = vloeren;
    }

    public Long getSelectedFloorId() {
        return selectedFloorId;
    }

    public void setSelectedFloorId(Long selectedFloorId) {
        this.selectedFloorId = selectedFloorId;
    }

    public String getSvg() {
        return svg;
    }

    public void setSvg(String svg) {
        this.svg = svg;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDesigner;
    private javax.swing.JButton btnJson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> jlistVerdiepingen;
    private javax.swing.JList<String> lstSVG;
    private javax.swing.JList<String> lstVerdiepingen;
    private javax.swing.JTable tblGebouw;
    // End of variables declaration//GEN-END:variables
}
